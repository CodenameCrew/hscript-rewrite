// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_hscript_Argument
#include <hscript/Argument.h>
#endif
#ifndef INCLUDED_hscript_Expr
#include <hscript/Expr.h>
#endif
#ifndef INCLUDED_hscript_ExprDef
#include <hscript/ExprDef.h>
#endif
#ifndef INCLUDED_hscript_ObjectField
#include <hscript/ObjectField.h>
#endif
#ifndef INCLUDED_hscript_SwitchCase
#include <hscript/SwitchCase.h>
#endif
#ifndef INCLUDED_hscript_utils_ExprPrinter
#include <hscript/utils/ExprPrinter.h>
#endif
#ifndef INCLUDED_hscript_utils_ExprUtils
#include <hscript/utils/ExprUtils.h>
#endif

namespace hscript{
namespace utils{

void ExprUtils_obj::__construct() { }

Dynamic ExprUtils_obj::__CreateEmpty() { return new ExprUtils_obj; }

void *ExprUtils_obj::_hx_vtable = 0;

Dynamic ExprUtils_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ExprUtils_obj > _hx_result = new ExprUtils_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ExprUtils_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x058a507e;
}

void ExprUtils_obj::iterate( ::hscript::Expr expr, ::Dynamic iter){
	while(true){
		{
			iter(expr);
			{
				 ::hscript::ExprDef _g = expr->expr;
				switch((int)(_g->_hx_getIndex())){
					case (int)0: {
					}
					break;
					case (int)1: {
					}
					break;
					case (int)2: {
						 ::hscript::Expr _g1 = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						if (::hx::IsNotNull( _g1 )) {
							expr = _g1;
							continue;
						}
					}
					break;
					case (int)3: {
						expr = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)4: {
						::Array< ::Dynamic> _g2 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g3 = 0;
							while((_g3 < _g2->length)){
								 ::hscript::Expr expr1 = _g2->__get(_g3).StaticCast<  ::hscript::Expr >();
								_g3 = (_g3 + 1);
								::hscript::utils::ExprUtils_obj::iterate(expr1,iter);
							}
						}
					}
					break;
					case (int)5: {
						expr = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)6: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)7: {
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)8: {
						::Array< ::Dynamic> _g4 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						{
							::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
							{
								int _g5 = 0;
								while((_g5 < _g4->length)){
									 ::hscript::Expr expr2 = _g4->__get(_g5).StaticCast<  ::hscript::Expr >();
									_g5 = (_g5 + 1);
									::hscript::utils::ExprUtils_obj::iterate(expr2,iter);
								}
							}
						}
					}
					break;
					case (int)9: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)10: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)11: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)12: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(3).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)13: case (int)14: {
					}
					break;
					case (int)15: {
						::Array< ::Dynamic> _g6 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						 ::hscript::Expr _g7 = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						{
							int _g8 = 0;
							while((_g8 < _g6->length)){
								 ::hscript::Argument arg = _g6->__get(_g8).StaticCast<  ::hscript::Argument >();
								_g8 = (_g8 + 1);
								::hscript::utils::ExprUtils_obj::iterate(arg->value,iter);
							}
						}
						expr = _g7;
						continue;
					}
					break;
					case (int)16: {
						 ::hscript::Expr _g9 = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						if (::hx::IsNotNull( _g9 )) {
							expr = _g9;
							continue;
						}
					}
					break;
					case (int)17: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)18: {
						::Array< ::Dynamic> _g10 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						::Array< ::Dynamic> _g11 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						{
							{
								int _g12 = 0;
								while((_g12 < _g10->length)){
									 ::hscript::Expr expr3 = _g10->__get(_g12).StaticCast<  ::hscript::Expr >();
									_g12 = (_g12 + 1);
									::hscript::utils::ExprUtils_obj::iterate(expr3,iter);
								}
							}
							{
								int _g13 = 0;
								while((_g13 < _g11->length)){
									 ::hscript::Expr expr4 = _g11->__get(_g13).StaticCast<  ::hscript::Expr >();
									_g13 = (_g13 + 1);
									::hscript::utils::ExprUtils_obj::iterate(expr4,iter);
								}
							}
						}
					}
					break;
					case (int)19: {
						::Array< ::Dynamic> _g14 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g15 = 0;
							while((_g15 < _g14->length)){
								 ::hscript::Expr expr5 = _g14->__get(_g15).StaticCast<  ::hscript::Expr >();
								_g15 = (_g15 + 1);
								::hscript::utils::ExprUtils_obj::iterate(expr5,iter);
							}
						}
					}
					break;
					case (int)20: {
						::Array< ::Dynamic> _g16 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g17 = 0;
							while((_g17 < _g16->length)){
								 ::hscript::Expr expr6 = _g16->__get(_g17).StaticCast<  ::hscript::Expr >();
								_g17 = (_g17 + 1);
								::hscript::utils::ExprUtils_obj::iterate(expr6,iter);
							}
						}
					}
					break;
					case (int)21: {
						expr = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)22: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)23: {
						::Array< ::Dynamic> _g18 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g19 = 0;
							while((_g19 < _g18->length)){
								 ::hscript::ObjectField field = _g18->__get(_g19).StaticCast<  ::hscript::ObjectField >();
								_g19 = (_g19 + 1);
								::hscript::utils::ExprUtils_obj::iterate(field->expr,iter);
							}
						}
					}
					break;
					case (int)24: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)25: {
						::Array< ::Dynamic> _g20 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						 ::hscript::Expr _g21 = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						{
							int _g22 = 0;
							while((_g22 < _g20->length)){
								 ::hscript::SwitchCase switchCase = _g20->__get(_g22).StaticCast<  ::hscript::SwitchCase >();
								_g22 = (_g22 + 1);
								{
									int _g23 = 0;
									::Array< ::Dynamic> _g24 = switchCase->values;
									while((_g23 < _g24->length)){
										 ::hscript::Expr val = _g24->__get(_g23).StaticCast<  ::hscript::Expr >();
										_g23 = (_g23 + 1);
										::hscript::utils::ExprUtils_obj::iterate(val,iter);
									}
								}
								::hscript::utils::ExprUtils_obj::iterate(switchCase->expr,iter);
							}
						}
						expr = _g21;
						continue;
					}
					break;
					case (int)26: {
						::hscript::utils::ExprUtils_obj::iterate(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)27: {
						::Array< ::Dynamic> _g25 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						 ::hscript::Expr _g26 = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						{
							int _g27 = 0;
							while((_g27 < _g25->length)){
								 ::hscript::Expr arg1 = _g25->__get(_g27).StaticCast<  ::hscript::Expr >();
								_g27 = (_g27 + 1);
								::hscript::utils::ExprUtils_obj::iterate(arg1,iter);
							}
						}
						expr = _g26;
						continue;
					}
					break;
					case (int)28: {
					}
					break;
					case (int)29: {
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
				}
			}
		}
		return;
	}
}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ExprUtils_obj,iterate,(void))

void ExprUtils_obj::transverse( ::hscript::Expr expr, ::Dynamic iter){
	while(true){
		{
			if (!(( (bool)(iter(expr)) ))) {
				return;
			}
			{
				 ::hscript::ExprDef _g = expr->expr;
				switch((int)(_g->_hx_getIndex())){
					case (int)0: {
					}
					break;
					case (int)1: {
					}
					break;
					case (int)2: {
						 ::hscript::Expr _g1 = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						if (::hx::IsNotNull( _g1 )) {
							expr = _g1;
							continue;
						}
					}
					break;
					case (int)3: {
						expr = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)4: {
						::Array< ::Dynamic> _g2 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g3 = 0;
							while((_g3 < _g2->length)){
								 ::hscript::Expr expr1 = _g2->__get(_g3).StaticCast<  ::hscript::Expr >();
								_g3 = (_g3 + 1);
								::hscript::utils::ExprUtils_obj::transverse(expr1,iter);
							}
						}
					}
					break;
					case (int)5: {
						expr = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)6: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)7: {
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)8: {
						::Array< ::Dynamic> _g4 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						{
							::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
							{
								int _g5 = 0;
								while((_g5 < _g4->length)){
									 ::hscript::Expr expr2 = _g4->__get(_g5).StaticCast<  ::hscript::Expr >();
									_g5 = (_g5 + 1);
									::hscript::utils::ExprUtils_obj::transverse(expr2,iter);
								}
							}
						}
					}
					break;
					case (int)9: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)10: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)11: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)12: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(3).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)13: case (int)14: {
					}
					break;
					case (int)15: {
						::Array< ::Dynamic> _g6 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						 ::hscript::Expr _g7 = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						{
							int _g8 = 0;
							while((_g8 < _g6->length)){
								 ::hscript::Argument arg = _g6->__get(_g8).StaticCast<  ::hscript::Argument >();
								_g8 = (_g8 + 1);
								::hscript::utils::ExprUtils_obj::transverse(arg->value,iter);
							}
						}
						expr = _g7;
						continue;
					}
					break;
					case (int)16: {
						 ::hscript::Expr _g9 = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						if (::hx::IsNotNull( _g9 )) {
							expr = _g9;
							continue;
						}
					}
					break;
					case (int)17: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)18: {
						::Array< ::Dynamic> _g10 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						::Array< ::Dynamic> _g11 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						{
							{
								int _g12 = 0;
								while((_g12 < _g10->length)){
									 ::hscript::Expr expr3 = _g10->__get(_g12).StaticCast<  ::hscript::Expr >();
									_g12 = (_g12 + 1);
									::hscript::utils::ExprUtils_obj::transverse(expr3,iter);
								}
							}
							{
								int _g13 = 0;
								while((_g13 < _g11->length)){
									 ::hscript::Expr expr4 = _g11->__get(_g13).StaticCast<  ::hscript::Expr >();
									_g13 = (_g13 + 1);
									::hscript::utils::ExprUtils_obj::transverse(expr4,iter);
								}
							}
						}
					}
					break;
					case (int)19: {
						::Array< ::Dynamic> _g14 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g15 = 0;
							while((_g15 < _g14->length)){
								 ::hscript::Expr expr5 = _g14->__get(_g15).StaticCast<  ::hscript::Expr >();
								_g15 = (_g15 + 1);
								::hscript::utils::ExprUtils_obj::transverse(expr5,iter);
							}
						}
					}
					break;
					case (int)20: {
						::Array< ::Dynamic> _g16 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g17 = 0;
							while((_g17 < _g16->length)){
								 ::hscript::Expr expr6 = _g16->__get(_g17).StaticCast<  ::hscript::Expr >();
								_g17 = (_g17 + 1);
								::hscript::utils::ExprUtils_obj::transverse(expr6,iter);
							}
						}
					}
					break;
					case (int)21: {
						expr = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)22: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)23: {
						::Array< ::Dynamic> _g18 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
						{
							int _g19 = 0;
							while((_g19 < _g18->length)){
								 ::hscript::ObjectField field = _g18->__get(_g19).StaticCast<  ::hscript::ObjectField >();
								_g19 = (_g19 + 1);
								::hscript::utils::ExprUtils_obj::transverse(field->expr,iter);
							}
						}
					}
					break;
					case (int)24: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)25: {
						::Array< ::Dynamic> _g20 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						 ::hscript::Expr _g21 = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						{
							int _g22 = 0;
							while((_g22 < _g20->length)){
								 ::hscript::SwitchCase switchCase = _g20->__get(_g22).StaticCast<  ::hscript::SwitchCase >();
								_g22 = (_g22 + 1);
								{
									int _g23 = 0;
									::Array< ::Dynamic> _g24 = switchCase->values;
									while((_g23 < _g24->length)){
										 ::hscript::Expr val = _g24->__get(_g23).StaticCast<  ::hscript::Expr >();
										_g23 = (_g23 + 1);
										::hscript::utils::ExprUtils_obj::transverse(val,iter);
									}
								}
								::hscript::utils::ExprUtils_obj::transverse(switchCase->expr,iter);
							}
						}
						expr = _g21;
						continue;
					}
					break;
					case (int)26: {
						::hscript::utils::ExprUtils_obj::transverse(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
					case (int)27: {
						::Array< ::Dynamic> _g25 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
						 ::hscript::Expr _g26 = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
						{
							int _g27 = 0;
							while((_g27 < _g25->length)){
								 ::hscript::Expr arg1 = _g25->__get(_g27).StaticCast<  ::hscript::Expr >();
								_g27 = (_g27 + 1);
								::hscript::utils::ExprUtils_obj::transverse(arg1,iter);
							}
						}
						expr = _g26;
						continue;
					}
					break;
					case (int)28: {
					}
					break;
					case (int)29: {
						expr = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
						continue;
					}
					break;
				}
			}
		}
		return;
	}
}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ExprUtils_obj,transverse,(void))

 ::hscript::Expr ExprUtils_obj::map( ::hscript::Expr expr, ::Dynamic iter){
            	HX_JUST_GC_STACKFRAME
	 ::hscript::Expr result = ( ( ::hscript::Expr)(iter(expr)) );
	if (::hx::IsNull( result )) {
		return null();
	}
	 ::hscript::ExprDef _g = result->expr;
	 ::hscript::ExprDef _hx_tmp;
	switch((int)(_g->_hx_getIndex())){
		case (int)0: {
			_hx_tmp = result->expr;
		}
		break;
		case (int)1: {
			_hx_tmp = result->expr;
		}
		break;
		case (int)2: {
			 ::hscript::Expr _g1 = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
			 ::hscript::Expr _hx_tmp1;
			if (::hx::IsNotNull( _g1 )) {
				_hx_tmp1 = ::hscript::utils::ExprUtils_obj::map(_g1,iter);
			}
			else {
				_hx_tmp1 = null();
			}
			_hx_tmp = ::hscript::ExprDef_obj::EVar(_g->_hx_getInt(0),_hx_tmp1,_g->_hx_getObject(2),_g->_hx_getObject(3));
		}
		break;
		case (int)3: {
			_hx_tmp = ::hscript::ExprDef_obj::EParent(::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)4: {
			::Array< ::Dynamic> _g2 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
			::Array< ::Dynamic> _g3 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g4 = 0;
				while((_g4 < _g2->length)){
					 ::hscript::Expr expr1 = _g2->__get(_g4).StaticCast<  ::hscript::Expr >();
					_g4 = (_g4 + 1);
					_g3->push(::hscript::utils::ExprUtils_obj::map(expr1,iter));
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::EBlock(_g3);
		}
		break;
		case (int)5: {
			_hx_tmp = ::hscript::ExprDef_obj::EField(::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter),_g->_hx_getString(1),_g->_hx_getObject(2));
		}
		break;
		case (int)6: {
			 ::hscript::Expr _hx_tmp2 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::EBinop(_g->_hx_getInt(0),_hx_tmp2,::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)7: {
			_hx_tmp = ::hscript::ExprDef_obj::EUnop(_g->_hx_getInt(0),_g->_hx_getBool(1),::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)8: {
			::Array< ::Dynamic> _g5 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
			 ::hscript::Expr _hx_tmp3 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			::Array< ::Dynamic> _g6 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g7 = 0;
				while((_g7 < _g5->length)){
					 ::hscript::Expr expr2 = _g5->__get(_g7).StaticCast<  ::hscript::Expr >();
					_g7 = (_g7 + 1);
					_g6->push(::hscript::utils::ExprUtils_obj::map(expr2,iter));
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::ECall(_hx_tmp3,_g6);
		}
		break;
		case (int)9: {
			 ::hscript::Expr _g8 = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
			 ::hscript::Expr _hx_tmp4 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			 ::hscript::Expr _hx_tmp5 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
			 ::hscript::Expr _hx_tmp6;
			if (::hx::IsNotNull( _g8 )) {
				_hx_tmp6 = ::hscript::utils::ExprUtils_obj::map(_g8,iter);
			}
			else {
				_hx_tmp6 = null();
			}
			_hx_tmp = ::hscript::ExprDef_obj::EIf(_hx_tmp4,_hx_tmp5,_hx_tmp6);
		}
		break;
		case (int)10: {
			 ::hscript::Expr _hx_tmp7 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::EWhile(_hx_tmp7,::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)11: {
			 ::hscript::Expr _hx_tmp8 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::EFor(_g->_hx_getInt(0),_hx_tmp8,::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)12: {
			 ::hscript::Expr _hx_tmp9 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::EForKeyValue(_g->_hx_getInt(0),_g->_hx_getInt(1),_hx_tmp9,::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(3).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)13: case (int)14: {
			_hx_tmp = result->expr;
		}
		break;
		case (int)15: {
			::Array< ::Dynamic> _g9 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
			 ::hscript::Expr _g10 = _g->_hx_getObject(1).StaticCast<  ::hscript::Expr >();
			int _g11 = _g->_hx_getInt(2);
			bool _g12 = _g->_hx_getBool(3);
			bool _g13 = _g->_hx_getBool(4);
			::Array< ::Dynamic> _g14 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g15 = 0;
				while((_g15 < _g9->length)){
					 ::hscript::Argument arg = _g9->__get(_g15).StaticCast<  ::hscript::Argument >();
					_g15 = (_g15 + 1);
					if (::hx::IsNotNull( arg->value )) {
						int arg1 = arg->name;
						bool arg2 = arg->opt;
						_g14->push( ::hscript::Argument_obj::__alloc( HX_CTX ,arg1,arg2,::hscript::utils::ExprUtils_obj::map(arg->value,iter)));
					}
					else {
						_g14->push(arg);
					}
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::EFunction(_g14,::hscript::utils::ExprUtils_obj::map(_g10,iter),_g11,_g12,_g13);
		}
		break;
		case (int)16: {
			 ::hscript::Expr _g16 = _g->_hx_getObject(0).StaticCast<  ::hscript::Expr >();
			 ::hscript::Expr _hx_tmp10;
			if (::hx::IsNotNull( _g16 )) {
				_hx_tmp10 = ::hscript::utils::ExprUtils_obj::map(_g16,iter);
			}
			else {
				_hx_tmp10 = null();
			}
			_hx_tmp = ::hscript::ExprDef_obj::EReturn(_hx_tmp10);
		}
		break;
		case (int)17: {
			 ::hscript::Expr _hx_tmp11 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::EArray(_hx_tmp11,::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)18: {
			::Array< ::Dynamic> _g17 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
			::Array< ::Dynamic> _g18 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
			::Array< ::Dynamic> _g19 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g20 = 0;
				while((_g20 < _g17->length)){
					 ::hscript::Expr expr3 = _g17->__get(_g20).StaticCast<  ::hscript::Expr >();
					_g20 = (_g20 + 1);
					_g19->push(::hscript::utils::ExprUtils_obj::map(expr3,iter));
				}
			}
			::Array< ::Dynamic> _g21 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g22 = 0;
				while((_g22 < _g18->length)){
					 ::hscript::Expr expr4 = _g18->__get(_g22).StaticCast<  ::hscript::Expr >();
					_g22 = (_g22 + 1);
					_g21->push(::hscript::utils::ExprUtils_obj::map(expr4,iter));
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::EMapDecl(_g19,_g21);
		}
		break;
		case (int)19: {
			::Array< ::Dynamic> _g23 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
			::Array< ::Dynamic> _g24 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g25 = 0;
				while((_g25 < _g23->length)){
					 ::hscript::Expr expr5 = _g23->__get(_g25).StaticCast<  ::hscript::Expr >();
					_g25 = (_g25 + 1);
					_g24->push(::hscript::utils::ExprUtils_obj::map(expr5,iter));
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::EArrayDecl(_g24);
		}
		break;
		case (int)20: {
			int _g26 = _g->_hx_getInt(0);
			::Array< ::Dynamic> _g27 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
			::Array< ::Dynamic> _g28 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g29 = 0;
				while((_g29 < _g27->length)){
					 ::hscript::Expr expr6 = _g27->__get(_g29).StaticCast<  ::hscript::Expr >();
					_g29 = (_g29 + 1);
					_g28->push(::hscript::utils::ExprUtils_obj::map(expr6,iter));
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::ENew(_g26,_g28);
		}
		break;
		case (int)21: {
			_hx_tmp = ::hscript::ExprDef_obj::EThrow(::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)22: {
			 ::hscript::Expr _hx_tmp12 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::ETry(_hx_tmp12,_g->_hx_getInt(1),::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)23: {
			::Array< ::Dynamic> _g30 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
			::Array< ::Dynamic> _g31 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g32 = 0;
				while((_g32 < _g30->length)){
					 ::hscript::ObjectField field = _g30->__get(_g32).StaticCast<  ::hscript::ObjectField >();
					_g32 = (_g32 + 1);
					::String field1 = field->name;
					_g31->push( ::hscript::ObjectField_obj::__alloc( HX_CTX ,field1,::hscript::utils::ExprUtils_obj::map(field->expr,iter)));
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::EObject(_g31);
		}
		break;
		case (int)24: {
			 ::hscript::Expr _hx_tmp13 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			 ::hscript::Expr _hx_tmp14 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::ETernary(_hx_tmp13,_hx_tmp14,::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(2).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)25: {
			::Array< ::Dynamic> _g33 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
			 ::hscript::Expr _g34 = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
			 ::hscript::Expr _hx_tmp15 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			::Array< ::Dynamic> _g35 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g36 = 0;
				while((_g36 < _g33->length)){
					 ::hscript::SwitchCase switchCase = _g33->__get(_g36).StaticCast<  ::hscript::SwitchCase >();
					_g36 = (_g36 + 1);
					::Array< ::Dynamic> _g37 = ::Array_obj< ::Dynamic>::__new(0);
					{
						int _g38 = 0;
						::Array< ::Dynamic> _g39 = switchCase->values;
						while((_g38 < _g39->length)){
							 ::hscript::Expr val = _g39->__get(_g38).StaticCast<  ::hscript::Expr >();
							_g38 = (_g38 + 1);
							_g37->push(::hscript::utils::ExprUtils_obj::map(val,iter));
						}
					}
					_g35->push( ::hscript::SwitchCase_obj::__alloc( HX_CTX ,_g37,::hscript::utils::ExprUtils_obj::map(switchCase->expr,iter)));
				}
			}
			 ::hscript::Expr _hx_tmp16;
			if (::hx::IsNotNull( _g34 )) {
				_hx_tmp16 = ::hscript::utils::ExprUtils_obj::map(_g34,iter);
			}
			else {
				_hx_tmp16 = null();
			}
			_hx_tmp = ::hscript::ExprDef_obj::ESwitch(_hx_tmp15,_g35,_hx_tmp16);
		}
		break;
		case (int)26: {
			 ::hscript::Expr _hx_tmp17 = ::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(0).StaticCast<  ::hscript::Expr >(),iter);
			_hx_tmp = ::hscript::ExprDef_obj::EDoWhile(_hx_tmp17,::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
		case (int)27: {
			::String _g40 = _g->_hx_getString(0);
			::Array< ::Dynamic> _g41 = _g->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
			 ::hscript::Expr _g42 = _g->_hx_getObject(2).StaticCast<  ::hscript::Expr >();
			::Array< ::Dynamic> _g43 = ::Array_obj< ::Dynamic>::__new(0);
			{
				int _g44 = 0;
				while((_g44 < _g41->length)){
					 ::hscript::Expr arg3 = _g41->__get(_g44).StaticCast<  ::hscript::Expr >();
					_g44 = (_g44 + 1);
					_g43->push(::hscript::utils::ExprUtils_obj::map(arg3,iter));
				}
			}
			_hx_tmp = ::hscript::ExprDef_obj::EMeta(_g40,_g43,::hscript::utils::ExprUtils_obj::map(_g42,iter));
		}
		break;
		case (int)28: {
			_hx_tmp = result->expr;
		}
		break;
		case (int)29: {
			_hx_tmp = ::hscript::ExprDef_obj::EInfo(_g->_hx_getObject(0).StaticCast< ::Array< ::String > >(),::hscript::utils::ExprUtils_obj::map(_g->_hx_getObject(1).StaticCast<  ::hscript::Expr >(),iter));
		}
		break;
	}
	return  ::hscript::Expr_obj::__alloc( HX_CTX ,_hx_tmp,result->line);
}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ExprUtils_obj,map,return )

::String ExprUtils_obj::print( ::hscript::Expr e,::hx::Null< bool >  __o_pretty){
	bool pretty = __o_pretty.Default(true);
            	HX_JUST_GC_STACKFRAME
	::String printer;
	if (pretty) {
		printer = HX_("\t",09,00,00,00);
	}
	else {
		printer = null();
	}
	return  ::hscript::utils::ExprPrinter_obj::__alloc( HX_CTX ,printer)->exprToString(e);
}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ExprUtils_obj,print,return )


ExprUtils_obj::ExprUtils_obj()
{
}

bool ExprUtils_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { outValue = map_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"print") ) { outValue = print_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"iterate") ) { outValue = iterate_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"transverse") ) { outValue = transverse_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ExprUtils_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ExprUtils_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ExprUtils_obj::__mClass;

static ::String ExprUtils_obj_sStaticFields[] = {
	HX_("iterate",fa,79,d0,e2),
	HX_("transverse",8d,bc,01,cb),
	HX_("map",9c,0a,53,00),
	HX_("print",2d,58,8b,c8),
	::String(null())
};

void ExprUtils_obj::__register()
{
	ExprUtils_obj _hx_dummy;
	ExprUtils_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hscript.utils.ExprUtils",24,7e,80,97);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ExprUtils_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ExprUtils_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ExprUtils_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ExprUtils_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ExprUtils_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hscript
} // end namespace utils
