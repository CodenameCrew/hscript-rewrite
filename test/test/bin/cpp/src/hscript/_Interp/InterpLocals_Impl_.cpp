// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_hscript_InterpLocalsImpl
#include <hscript/InterpLocalsImpl.h>
#endif
#ifndef INCLUDED_hscript_ScriptRuntime
#include <hscript/ScriptRuntime.h>
#endif
#ifndef INCLUDED_hscript__Interp_InterpLocals_Impl_
#include <hscript/_Interp/InterpLocals_Impl_.h>
#endif

namespace hscript{
namespace _Interp{

void InterpLocals_Impl__obj::__construct() { }

Dynamic InterpLocals_Impl__obj::__CreateEmpty() { return new InterpLocals_Impl__obj; }

void *InterpLocals_Impl__obj::_hx_vtable = 0;

Dynamic InterpLocals_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< InterpLocals_Impl__obj > _hx_result = new InterpLocals_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool InterpLocals_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4ff9dedc;
}

 ::hscript::InterpLocalsImpl InterpLocals_Impl__obj::_new( ::hscript::ScriptRuntime parent){
            	HX_JUST_GC_STACKFRAME
	return  ::hscript::InterpLocalsImpl_obj::__alloc( HX_CTX ,parent);
}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(InterpLocals_Impl__obj,_new,return )

 ::Dynamic InterpLocals_Impl__obj::arrayGet( ::hscript::InterpLocalsImpl this1,::String key){
	if (this1->useDefaults) {
		return this1->defaultsValues->get(key);
	}
	else {
		bool _hx_tmp;
		if (::hx::IsNotNull( this1->parent->variablesLookup )) {
			_hx_tmp = this1->parent->variablesLookup->exists(key);
		}
		else {
			_hx_tmp = false;
		}
		if (_hx_tmp) {
			int varID = this1->parent->variablesLookup->get_int(key);
			if (( (bool)(_hx_array_unsafe_get(this1->parent->variablesDeclared,varID)) )) {
				return _hx_array_unsafe_get(this1->parent->variablesValues,varID);
			}
			else {
				return null();
			}
		}
		else {
			return null();
		}
	}
	return null();
}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(InterpLocals_Impl__obj,arrayGet,return )

void InterpLocals_Impl__obj::arraySet( ::hscript::InterpLocalsImpl this1,::String key, ::Dynamic value){
	if (this1->useDefaults) {
		this1->defaultsValues->set(key,value);
	}
	else {
		bool _hx_tmp;
		if (::hx::IsNotNull( this1->parent->variablesLookup )) {
			_hx_tmp = this1->parent->variablesLookup->exists(key);
		}
		else {
			_hx_tmp = false;
		}
		if (_hx_tmp) {
			 ::hscript::ScriptRuntime _this = this1->parent;
			int name = this1->parent->variablesLookup->get_int(key);
			_this->variablesDeclared->__unsafe_set(name,true);
			_hx_array_unsafe_get(_this->variablesValues,name)->__SetField(HX_("r",72,00,00,00),value,::hx::paccDynamic);
		}
	}
}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(InterpLocals_Impl__obj,arraySet,(void))


InterpLocals_Impl__obj::InterpLocals_Impl__obj()
{
}

bool InterpLocals_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"arrayGet") ) { outValue = arrayGet_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"arraySet") ) { outValue = arraySet_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *InterpLocals_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *InterpLocals_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class InterpLocals_Impl__obj::__mClass;

static ::String InterpLocals_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("arrayGet",7d,90,6a,ef),
	HX_("arraySet",89,ab,73,ef),
	::String(null())
};

void InterpLocals_Impl__obj::__register()
{
	InterpLocals_Impl__obj _hx_dummy;
	InterpLocals_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hscript._Interp.InterpLocals_Impl_",72,21,67,d4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &InterpLocals_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(InterpLocals_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< InterpLocals_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = InterpLocals_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = InterpLocals_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hscript
} // end namespace _Interp
