// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_hscript_LConst
#include <hscript/LConst.h>
#endif
#ifndef INCLUDED_hscript_LToken
#include <hscript/LToken.h>
#endif
namespace hscript{

::hscript::LToken LToken_obj::LTCloseBr;

::hscript::LToken LToken_obj::LTCloseCB;

::hscript::LToken LToken_obj::LTCloseP;

::hscript::LToken LToken_obj::LTColon;

::hscript::LToken LToken_obj::LTComma;

::hscript::LToken LToken_obj::LTConst( ::hscript::LConst _hx_const)
{
	return ::hx::CreateEnum< LToken_obj >(HX_("LTConst",bb,f9,e4,cb),16,1)->_hx_init(0,_hx_const);
}

::hscript::LToken LToken_obj::LTDollar;

::hscript::LToken LToken_obj::LTDot;

::hscript::LToken LToken_obj::LTEof;

::hscript::LToken LToken_obj::LTIdentifier(::String identifier)
{
	return ::hx::CreateEnum< LToken_obj >(HX_("LTIdentifier",11,89,ad,92),15,1)->_hx_init(0,identifier);
}

::hscript::LToken LToken_obj::LTKeyWord(::String keyword)
{
	return ::hx::CreateEnum< LToken_obj >(HX_("LTKeyWord",61,39,60,da),14,1)->_hx_init(0,keyword);
}

::hscript::LToken LToken_obj::LTMeta(::String meta)
{
	return ::hx::CreateEnum< LToken_obj >(HX_("LTMeta",6d,9d,fa,f3),17,1)->_hx_init(0,meta);
}

::hscript::LToken LToken_obj::LTOp(::String op)
{
	return ::hx::CreateEnum< LToken_obj >(HX_("LTOp",c9,39,7c,32),13,1)->_hx_init(0,op);
}

::hscript::LToken LToken_obj::LTOpenBr;

::hscript::LToken LToken_obj::LTOpenCB;

::hscript::LToken LToken_obj::LTOpenP;

::hscript::LToken LToken_obj::LTPrepro(::String prepro)
{
	return ::hx::CreateEnum< LToken_obj >(HX_("LTPrepro",92,c4,57,83),18,1)->_hx_init(0,prepro);
}

::hscript::LToken LToken_obj::LTQuestion;

::hscript::LToken LToken_obj::LTQuestionDot;

::hscript::LToken LToken_obj::LTSemiColon;

bool LToken_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LTCloseBr",00,76,ac,aa)) { outValue = LToken_obj::LTCloseBr; return true; }
	if (inName==HX_("LTCloseCB",af,76,ac,aa)) { outValue = LToken_obj::LTCloseCB; return true; }
	if (inName==HX_("LTCloseP",40,f6,ea,e2)) { outValue = LToken_obj::LTCloseP; return true; }
	if (inName==HX_("LTColon",b7,71,e3,cb)) { outValue = LToken_obj::LTColon; return true; }
	if (inName==HX_("LTComma",2d,32,e4,cb)) { outValue = LToken_obj::LTComma; return true; }
	if (inName==HX_("LTConst",bb,f9,e4,cb)) { outValue = LToken_obj::LTConst_dyn(); return true; }
	if (inName==HX_("LTDollar",24,19,79,01)) { outValue = LToken_obj::LTDollar; return true; }
	if (inName==HX_("LTDot",e1,fc,2d,fa)) { outValue = LToken_obj::LTDot; return true; }
	if (inName==HX_("LTEof",14,bf,2e,fa)) { outValue = LToken_obj::LTEof; return true; }
	if (inName==HX_("LTIdentifier",11,89,ad,92)) { outValue = LToken_obj::LTIdentifier_dyn(); return true; }
	if (inName==HX_("LTKeyWord",61,39,60,da)) { outValue = LToken_obj::LTKeyWord_dyn(); return true; }
	if (inName==HX_("LTMeta",6d,9d,fa,f3)) { outValue = LToken_obj::LTMeta_dyn(); return true; }
	if (inName==HX_("LTOp",c9,39,7c,32)) { outValue = LToken_obj::LTOp_dyn(); return true; }
	if (inName==HX_("LTOpenBr",e2,90,2d,f6)) { outValue = LToken_obj::LTOpenBr; return true; }
	if (inName==HX_("LTOpenCB",91,91,2d,f6)) { outValue = LToken_obj::LTOpenCB; return true; }
	if (inName==HX_("LTOpenP",9e,4d,56,b5)) { outValue = LToken_obj::LTOpenP; return true; }
	if (inName==HX_("LTPrepro",92,c4,57,83)) { outValue = LToken_obj::LTPrepro_dyn(); return true; }
	if (inName==HX_("LTQuestion",ce,61,b4,4d)) { outValue = LToken_obj::LTQuestion; return true; }
	if (inName==HX_("LTQuestionDot",5b,2d,dc,e0)) { outValue = LToken_obj::LTQuestionDot; return true; }
	if (inName==HX_("LTSemiColon",69,92,49,dd)) { outValue = LToken_obj::LTSemiColon; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(LToken_obj)

int LToken_obj::__FindIndex(::String inName)
{
	if (inName==HX_("LTCloseBr",00,76,ac,aa)) return 3;
	if (inName==HX_("LTCloseCB",af,76,ac,aa)) return 5;
	if (inName==HX_("LTCloseP",40,f6,ea,e2)) return 1;
	if (inName==HX_("LTColon",b7,71,e3,cb)) return 8;
	if (inName==HX_("LTComma",2d,32,e4,cb)) return 6;
	if (inName==HX_("LTConst",bb,f9,e4,cb)) return 16;
	if (inName==HX_("LTDollar",24,19,79,01)) return 12;
	if (inName==HX_("LTDot",e1,fc,2d,fa)) return 7;
	if (inName==HX_("LTEof",14,bf,2e,fa)) return 19;
	if (inName==HX_("LTIdentifier",11,89,ad,92)) return 15;
	if (inName==HX_("LTKeyWord",61,39,60,da)) return 14;
	if (inName==HX_("LTMeta",6d,9d,fa,f3)) return 17;
	if (inName==HX_("LTOp",c9,39,7c,32)) return 13;
	if (inName==HX_("LTOpenBr",e2,90,2d,f6)) return 2;
	if (inName==HX_("LTOpenCB",91,91,2d,f6)) return 4;
	if (inName==HX_("LTOpenP",9e,4d,56,b5)) return 0;
	if (inName==HX_("LTPrepro",92,c4,57,83)) return 18;
	if (inName==HX_("LTQuestion",ce,61,b4,4d)) return 10;
	if (inName==HX_("LTQuestionDot",5b,2d,dc,e0)) return 11;
	if (inName==HX_("LTSemiColon",69,92,49,dd)) return 9;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LToken_obj,LTConst,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LToken_obj,LTIdentifier,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LToken_obj,LTKeyWord,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LToken_obj,LTMeta,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LToken_obj,LTOp,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(LToken_obj,LTPrepro,return)

int LToken_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("LTCloseBr",00,76,ac,aa)) return 0;
	if (inName==HX_("LTCloseCB",af,76,ac,aa)) return 0;
	if (inName==HX_("LTCloseP",40,f6,ea,e2)) return 0;
	if (inName==HX_("LTColon",b7,71,e3,cb)) return 0;
	if (inName==HX_("LTComma",2d,32,e4,cb)) return 0;
	if (inName==HX_("LTConst",bb,f9,e4,cb)) return 1;
	if (inName==HX_("LTDollar",24,19,79,01)) return 0;
	if (inName==HX_("LTDot",e1,fc,2d,fa)) return 0;
	if (inName==HX_("LTEof",14,bf,2e,fa)) return 0;
	if (inName==HX_("LTIdentifier",11,89,ad,92)) return 1;
	if (inName==HX_("LTKeyWord",61,39,60,da)) return 1;
	if (inName==HX_("LTMeta",6d,9d,fa,f3)) return 1;
	if (inName==HX_("LTOp",c9,39,7c,32)) return 1;
	if (inName==HX_("LTOpenBr",e2,90,2d,f6)) return 0;
	if (inName==HX_("LTOpenCB",91,91,2d,f6)) return 0;
	if (inName==HX_("LTOpenP",9e,4d,56,b5)) return 0;
	if (inName==HX_("LTPrepro",92,c4,57,83)) return 1;
	if (inName==HX_("LTQuestion",ce,61,b4,4d)) return 0;
	if (inName==HX_("LTQuestionDot",5b,2d,dc,e0)) return 0;
	if (inName==HX_("LTSemiColon",69,92,49,dd)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val LToken_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LTCloseBr",00,76,ac,aa)) return LTCloseBr;
	if (inName==HX_("LTCloseCB",af,76,ac,aa)) return LTCloseCB;
	if (inName==HX_("LTCloseP",40,f6,ea,e2)) return LTCloseP;
	if (inName==HX_("LTColon",b7,71,e3,cb)) return LTColon;
	if (inName==HX_("LTComma",2d,32,e4,cb)) return LTComma;
	if (inName==HX_("LTConst",bb,f9,e4,cb)) return LTConst_dyn();
	if (inName==HX_("LTDollar",24,19,79,01)) return LTDollar;
	if (inName==HX_("LTDot",e1,fc,2d,fa)) return LTDot;
	if (inName==HX_("LTEof",14,bf,2e,fa)) return LTEof;
	if (inName==HX_("LTIdentifier",11,89,ad,92)) return LTIdentifier_dyn();
	if (inName==HX_("LTKeyWord",61,39,60,da)) return LTKeyWord_dyn();
	if (inName==HX_("LTMeta",6d,9d,fa,f3)) return LTMeta_dyn();
	if (inName==HX_("LTOp",c9,39,7c,32)) return LTOp_dyn();
	if (inName==HX_("LTOpenBr",e2,90,2d,f6)) return LTOpenBr;
	if (inName==HX_("LTOpenCB",91,91,2d,f6)) return LTOpenCB;
	if (inName==HX_("LTOpenP",9e,4d,56,b5)) return LTOpenP;
	if (inName==HX_("LTPrepro",92,c4,57,83)) return LTPrepro_dyn();
	if (inName==HX_("LTQuestion",ce,61,b4,4d)) return LTQuestion;
	if (inName==HX_("LTQuestionDot",5b,2d,dc,e0)) return LTQuestionDot;
	if (inName==HX_("LTSemiColon",69,92,49,dd)) return LTSemiColon;
	return super::__Field(inName,inCallProp);
}

static ::String LToken_obj_sStaticFields[] = {
	HX_("LTOpenP",9e,4d,56,b5),
	HX_("LTCloseP",40,f6,ea,e2),
	HX_("LTOpenBr",e2,90,2d,f6),
	HX_("LTCloseBr",00,76,ac,aa),
	HX_("LTOpenCB",91,91,2d,f6),
	HX_("LTCloseCB",af,76,ac,aa),
	HX_("LTComma",2d,32,e4,cb),
	HX_("LTDot",e1,fc,2d,fa),
	HX_("LTColon",b7,71,e3,cb),
	HX_("LTSemiColon",69,92,49,dd),
	HX_("LTQuestion",ce,61,b4,4d),
	HX_("LTQuestionDot",5b,2d,dc,e0),
	HX_("LTDollar",24,19,79,01),
	HX_("LTOp",c9,39,7c,32),
	HX_("LTKeyWord",61,39,60,da),
	HX_("LTIdentifier",11,89,ad,92),
	HX_("LTConst",bb,f9,e4,cb),
	HX_("LTMeta",6d,9d,fa,f3),
	HX_("LTPrepro",92,c4,57,83),
	HX_("LTEof",14,bf,2e,fa),
	::String(null())
};

::hx::Class LToken_obj::__mClass;

Dynamic __Create_LToken_obj() { return new LToken_obj; }

void LToken_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("hscript.LToken",a8,ed,4d,d2), ::hx::TCanCast< LToken_obj >,LToken_obj_sStaticFields,0,
	&__Create_LToken_obj, &__Create,
	&super::__SGetClass(), &CreateLToken_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &LToken_obj::__GetStatic;
}

void LToken_obj::__boot()
{
LTCloseBr = ::hx::CreateConstEnum< LToken_obj >(HX_("LTCloseBr",00,76,ac,aa),3);
LTCloseCB = ::hx::CreateConstEnum< LToken_obj >(HX_("LTCloseCB",af,76,ac,aa),5);
LTCloseP = ::hx::CreateConstEnum< LToken_obj >(HX_("LTCloseP",40,f6,ea,e2),1);
LTColon = ::hx::CreateConstEnum< LToken_obj >(HX_("LTColon",b7,71,e3,cb),8);
LTComma = ::hx::CreateConstEnum< LToken_obj >(HX_("LTComma",2d,32,e4,cb),6);
LTDollar = ::hx::CreateConstEnum< LToken_obj >(HX_("LTDollar",24,19,79,01),12);
LTDot = ::hx::CreateConstEnum< LToken_obj >(HX_("LTDot",e1,fc,2d,fa),7);
LTEof = ::hx::CreateConstEnum< LToken_obj >(HX_("LTEof",14,bf,2e,fa),19);
LTOpenBr = ::hx::CreateConstEnum< LToken_obj >(HX_("LTOpenBr",e2,90,2d,f6),2);
LTOpenCB = ::hx::CreateConstEnum< LToken_obj >(HX_("LTOpenCB",91,91,2d,f6),4);
LTOpenP = ::hx::CreateConstEnum< LToken_obj >(HX_("LTOpenP",9e,4d,56,b5),0);
LTQuestion = ::hx::CreateConstEnum< LToken_obj >(HX_("LTQuestion",ce,61,b4,4d),10);
LTQuestionDot = ::hx::CreateConstEnum< LToken_obj >(HX_("LTQuestionDot",5b,2d,dc,e0),11);
LTSemiColon = ::hx::CreateConstEnum< LToken_obj >(HX_("LTSemiColon",69,92,49,dd),9);
}


} // end namespace hscript
