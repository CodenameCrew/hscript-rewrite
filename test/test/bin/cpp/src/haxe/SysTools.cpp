// Generated by Haxe 4.3.7
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_SysTools
#include <haxe/SysTools.h>
#endif

static const ::String _hx_array_data_42269736_3[] = {
	HX_("\"",22,00,00,00),
};
static const ::String _hx_array_data_42269736_4[] = {
	HX_("\\\"",46,50,00,00),
};
static const ::String _hx_array_data_42269736_5[] = {
	HX_("\\",5c,00,00,00),
};
static const ::String _hx_array_data_42269736_6[] = {
	HX_("\"",22,00,00,00),
};
static const int _hx_array_data_42269736_7[] = {
	(int)32,(int)40,(int)41,(int)37,(int)33,(int)94,(int)34,(int)60,(int)62,(int)38,(int)124,(int)10,(int)13,(int)44,(int)59,
};
namespace haxe{

void SysTools_obj::__construct() { }

Dynamic SysTools_obj::__CreateEmpty() { return new SysTools_obj; }

void *SysTools_obj::_hx_vtable = 0;

Dynamic SysTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SysTools_obj > _hx_result = new SysTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SysTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x40b83714;
}

::Array< int > SysTools_obj::winMetaCharacters;

::String SysTools_obj::quoteUnixArg(::String argument){
            	HX_JUST_GC_STACKFRAME
	if ((argument == HX_("",00,00,00,00))) {
		return HX_("''",20,22,00,00);
	}
	if (!( ::EReg_obj::__alloc( HX_CTX ,HX_("[^a-zA-Z0-9_@%+=:,./-]",80,28,a0,8d),HX_("",00,00,00,00))->match(argument))) {
		return argument;
	}
	return ((HX_("'",27,00,00,00) + ::StringTools_obj::replace(argument,HX_("'",27,00,00,00),HX_("'\"'\"'",71,96,37,8b))) + HX_("'",27,00,00,00));
}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SysTools_obj,quoteUnixArg,return )

::String SysTools_obj::quoteWinArg(::String argument,bool escapeMetaCharacters){
            	HX_JUST_GC_STACKFRAME
	if (!( ::EReg_obj::__alloc( HX_CTX ,HX_("^(/)?[^ \t/\\\\\"]+$",3c,0f,01,c9),HX_("",00,00,00,00))->match(argument))) {
		 ::StringBuf result =  ::StringBuf_obj::__alloc( HX_CTX );
		bool needquote;
		bool needquote1;
		bool needquote2;
		if ((argument.indexOf(HX_(" ",20,00,00,00),null()) == -1)) {
			needquote2 = (argument.indexOf(HX_("\t",09,00,00,00),null()) != -1);
		}
		else {
			needquote2 = true;
		}
		if (!(needquote2)) {
			needquote1 = (argument == HX_("",00,00,00,00));
		}
		else {
			needquote1 = true;
		}
		if (!(needquote1)) {
			needquote = (argument.indexOf(HX_("/",2f,00,00,00),null()) > 0);
		}
		else {
			needquote = true;
		}
		if (needquote) {
			if (::hx::IsNotNull( result->charBuf )) {
				result->flush();
			}
			if (::hx::IsNull( result->b )) {
				result->b = ::Array_obj< ::String >::fromData( _hx_array_data_42269736_3,1);
			}
			else {
				result->b->push(HX_("\"",22,00,00,00));
			}
		}
		 ::StringBuf bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
		{
			int _g = 0;
			int _g1 = argument.length;
			while((_g < _g1)){
				_g = (_g + 1);
				{
					 ::Dynamic _g2 = argument.charCodeAt((_g - 1));
					if (::hx::IsNull( _g2 )) {
						if ((bs_buf->get_length() > 0)) {
							{
								::String x = bs_buf->toString();
								if (::hx::IsNotNull( result->charBuf )) {
									result->flush();
								}
								if (::hx::IsNull( result->b )) {
									result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
								}
								else {
									::Array< ::String > result1 = result->b;
									result1->push(::Std_obj::string(x));
								}
							}
							bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
						}
						{
							int c = ( (int)(_g2) );
							if ((c >= 127)) {
								::String x1 = ::String::fromCharCode(c);
								if (::hx::IsNotNull( result->charBuf )) {
									result->flush();
								}
								if (::hx::IsNull( result->b )) {
									result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
								}
								else {
									::Array< ::String > result2 = result->b;
									result2->push(::Std_obj::string(x1));
								}
							}
							else {
								if (::hx::IsNull( result->charBuf )) {
									result->charBuf = ::Array_obj< char >::__new();
								}
								result->charBuf->push(c);
							}
						}
					}
					else {
						 ::Dynamic _hx_switch_0 = _g2;
						if (  (_hx_switch_0==34) ){
							::String bs = bs_buf->toString();
							{
								if (::hx::IsNotNull( result->charBuf )) {
									result->flush();
								}
								if (::hx::IsNull( result->b )) {
									result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(bs));
								}
								else {
									::Array< ::String > result3 = result->b;
									result3->push(::Std_obj::string(bs));
								}
							}
							{
								if (::hx::IsNotNull( result->charBuf )) {
									result->flush();
								}
								if (::hx::IsNull( result->b )) {
									result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(bs));
								}
								else {
									::Array< ::String > result4 = result->b;
									result4->push(::Std_obj::string(bs));
								}
							}
							bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
							{
								if (::hx::IsNotNull( result->charBuf )) {
									result->flush();
								}
								if (::hx::IsNull( result->b )) {
									result->b = ::Array_obj< ::String >::fromData( _hx_array_data_42269736_4,1);
								}
								else {
									result->b->push(HX_("\\\"",46,50,00,00));
								}
							}
							goto _hx_goto_1;
						}
						if (  (_hx_switch_0==92) ){
							if (::hx::IsNotNull( bs_buf->charBuf )) {
								bs_buf->flush();
							}
							if (::hx::IsNull( bs_buf->b )) {
								bs_buf->b = ::Array_obj< ::String >::fromData( _hx_array_data_42269736_5,1);
							}
							else {
								bs_buf->b->push(HX_("\\",5c,00,00,00));
							}
							goto _hx_goto_1;
						}
						/* default */{
							if ((bs_buf->get_length() > 0)) {
								{
									::String x2 = bs_buf->toString();
									if (::hx::IsNotNull( result->charBuf )) {
										result->flush();
									}
									if (::hx::IsNull( result->b )) {
										result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
									}
									else {
										::Array< ::String > result5 = result->b;
										result5->push(::Std_obj::string(x2));
									}
								}
								bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
							}
							{
								int c1 = ( (int)(_g2) );
								if ((c1 >= 127)) {
									::String x3 = ::String::fromCharCode(c1);
									if (::hx::IsNotNull( result->charBuf )) {
										result->flush();
									}
									if (::hx::IsNull( result->b )) {
										result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x3));
									}
									else {
										::Array< ::String > result6 = result->b;
										result6->push(::Std_obj::string(x3));
									}
								}
								else {
									if (::hx::IsNull( result->charBuf )) {
										result->charBuf = ::Array_obj< char >::__new();
									}
									result->charBuf->push(c1);
								}
							}
						}
						_hx_goto_1:;
					}
				}
			}
		}
		{
			::String x4 = bs_buf->toString();
			if (::hx::IsNotNull( result->charBuf )) {
				result->flush();
			}
			if (::hx::IsNull( result->b )) {
				result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x4));
			}
			else {
				::Array< ::String > result7 = result->b;
				result7->push(::Std_obj::string(x4));
			}
		}
		if (needquote) {
			{
				::String x5 = bs_buf->toString();
				if (::hx::IsNotNull( result->charBuf )) {
					result->flush();
				}
				if (::hx::IsNull( result->b )) {
					result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x5));
				}
				else {
					::Array< ::String > result8 = result->b;
					result8->push(::Std_obj::string(x5));
				}
			}
			{
				if (::hx::IsNotNull( result->charBuf )) {
					result->flush();
				}
				if (::hx::IsNull( result->b )) {
					result->b = ::Array_obj< ::String >::fromData( _hx_array_data_42269736_6,1);
				}
				else {
					result->b->push(HX_("\"",22,00,00,00));
				}
			}
		}
		argument = result->toString();
	}
	if (escapeMetaCharacters) {
		 ::StringBuf result9 =  ::StringBuf_obj::__alloc( HX_CTX );
		{
			int _g3 = 0;
			int _g4 = argument.length;
			while((_g3 < _g4)){
				_g3 = (_g3 + 1);
				 ::Dynamic c2 = argument.charCodeAt((_g3 - 1));
				if ((::haxe::SysTools_obj::winMetaCharacters->indexOf(c2,null()) >= 0)) {
					if (::hx::IsNull( result9->charBuf )) {
						result9->charBuf = ::Array_obj< char >::__new();
					}
					result9->charBuf->push(94);
				}
				{
					int c3 = ( (int)(c2) );
					if ((c3 >= 127)) {
						::String x6 = ::String::fromCharCode(c3);
						if (::hx::IsNotNull( result9->charBuf )) {
							result9->flush();
						}
						if (::hx::IsNull( result9->b )) {
							result9->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x6));
						}
						else {
							::Array< ::String > result10 = result9->b;
							result10->push(::Std_obj::string(x6));
						}
					}
					else {
						if (::hx::IsNull( result9->charBuf )) {
							result9->charBuf = ::Array_obj< char >::__new();
						}
						result9->charBuf->push(c3);
					}
				}
			}
		}
		return result9->toString();
	}
	else {
		return argument;
	}
	return null();
}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(SysTools_obj,quoteWinArg,return )


SysTools_obj::SysTools_obj()
{
}

bool SysTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"quoteWinArg") ) { outValue = quoteWinArg_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"quoteUnixArg") ) { outValue = quoteUnixArg_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"winMetaCharacters") ) { outValue = ( winMetaCharacters ); return true; }
	}
	return false;
}

bool SysTools_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"winMetaCharacters") ) { winMetaCharacters=ioValue.Cast< ::Array< int > >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SysTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo SysTools_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< int > */ ,(void *) &SysTools_obj::winMetaCharacters,HX_("winMetaCharacters",0b,65,cd,94)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void SysTools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SysTools_obj::winMetaCharacters,"winMetaCharacters");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SysTools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SysTools_obj::winMetaCharacters,"winMetaCharacters");
};

#endif

::hx::Class SysTools_obj::__mClass;

static ::String SysTools_obj_sStaticFields[] = {
	HX_("winMetaCharacters",0b,65,cd,94),
	HX_("quoteUnixArg",d2,54,33,00),
	HX_("quoteWinArg",f6,b3,bc,14),
	::String(null())
};

void SysTools_obj::__register()
{
	SysTools_obj _hx_dummy;
	SysTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.SysTools",36,97,26,42);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SysTools_obj::__GetStatic;
	__mClass->mSetStaticField = &SysTools_obj::__SetStatic;
	__mClass->mMarkFunc = SysTools_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SysTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SysTools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SysTools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SysTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SysTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void SysTools_obj::__boot()
{
{
	winMetaCharacters = ::Array_obj< int >::fromData( _hx_array_data_42269736_7,15);
}
}

} // end namespace haxe
