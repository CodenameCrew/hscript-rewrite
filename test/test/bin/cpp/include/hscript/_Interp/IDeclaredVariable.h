// Generated by Haxe 4.3.7
#ifndef INCLUDED_hscript__Interp_IDeclaredVariable
#define INCLUDED_hscript__Interp_IDeclaredVariable

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hscript,_Interp,IDeclaredVariable)

namespace hscript{
namespace _Interp{


class HXCPP_CLASS_ATTRIBUTES IDeclaredVariable_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef IDeclaredVariable_obj OBJ_;
		IDeclaredVariable_obj();

	public:
		enum { _hx_ClassId = 0x2e9efd5b };

		void __construct(int name,bool oldDeclared, ::Dynamic oldValue);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hscript._Interp.IDeclaredVariable")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hscript._Interp.IDeclaredVariable"); }

		inline static ::hx::ObjectPtr< IDeclaredVariable_obj > __new(int name,bool oldDeclared, ::Dynamic oldValue) {
			::hx::ObjectPtr< IDeclaredVariable_obj > __this = new IDeclaredVariable_obj();
			__this->__construct(name,oldDeclared,oldValue);
			return __this;
		}

		inline static ::hx::ObjectPtr< IDeclaredVariable_obj > __alloc(::hx::Ctx *_hx_ctx,int name,bool oldDeclared, ::Dynamic oldValue) {
			IDeclaredVariable_obj *__this = (IDeclaredVariable_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(IDeclaredVariable_obj), true, "hscript._Interp.IDeclaredVariable"));
			*(void **)__this = IDeclaredVariable_obj::_hx_vtable;
{
	( ( ::hscript::_Interp::IDeclaredVariable)(__this) )->name = name;
	( ( ::hscript::_Interp::IDeclaredVariable)(__this) )->oldDeclared = oldDeclared;
	( ( ::hscript::_Interp::IDeclaredVariable)(__this) )->oldValue = oldValue;
}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~IDeclaredVariable_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("IDeclaredVariable",bf,6f,d5,90); }

		int name;
		bool oldDeclared;
		 ::Dynamic oldValue;
};

} // end namespace hscript
} // end namespace _Interp

#endif /* INCLUDED_hscript__Interp_IDeclaredVariable */ 
