// Generated by Haxe 4.3.7
#ifndef INCLUDED_hscript_utils_ExprPrinter
#define INCLUDED_hscript_utils_ExprPrinter

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(StringBuf)
HX_DECLARE_CLASS1(hscript,Expr)
HX_DECLARE_CLASS1(hscript,LConst)
HX_DECLARE_CLASS2(hscript,utils,ExprPrinter)

namespace hscript{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES ExprPrinter_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ExprPrinter_obj OBJ_;
		ExprPrinter_obj();

	public:
		enum { _hx_ClassId = 0x1f158dd7 };

		void __construct(::String space);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hscript.utils.ExprPrinter")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hscript.utils.ExprPrinter"); }
		static ::hx::ObjectPtr< ExprPrinter_obj > __new(::String space);
		static ::hx::ObjectPtr< ExprPrinter_obj > __alloc(::hx::Ctx *_hx_ctx,::String space);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ExprPrinter_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ExprPrinter",05,d9,74,f2); }

		static ::String binopToString(unsigned char op);
		static ::Dynamic binopToString_dyn();

		static ::String unopToString(unsigned char op);
		static ::Dynamic unopToString_dyn();

		 ::StringBuf str;
		int depth;
		::String spaceChar;
		::String get_space();
		::Dynamic get_space_dyn();

		::Array< ::String > variableNames;
		void reset();
		::Dynamic reset_dyn();

		void loadTables(::Array< ::String > info);
		::Dynamic loadTables_dyn();

		::String exprToString( ::hscript::Expr e);
		::Dynamic exprToString_dyn();

		void add( ::Dynamic s);
		::Dynamic add_dyn();

		void addConst( ::hscript::LConst c);
		::Dynamic addConst_dyn();

		void printExpr( ::hscript::Expr e);
		::Dynamic printExpr_dyn();

		void increaseScope();
		::Dynamic increaseScope_dyn();

		void decreaseScope();
		::Dynamic decreaseScope_dyn();

};

} // end namespace hscript
} // end namespace utils

#endif /* INCLUDED_hscript_utils_ExprPrinter */ 
