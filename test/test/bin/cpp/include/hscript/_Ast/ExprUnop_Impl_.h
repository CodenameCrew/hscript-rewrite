// Generated by Haxe 4.3.7
#ifndef INCLUDED_hscript__Ast_ExprUnop_Impl_
#define INCLUDED_hscript__Ast_ExprUnop_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS2(hscript,_Ast,ExprUnop_Impl_)

namespace hscript{
namespace _Ast{


class HXCPP_CLASS_ATTRIBUTES ExprUnop_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ExprUnop_Impl__obj OBJ_;
		ExprUnop_Impl__obj();

	public:
		enum { _hx_ClassId = 0x7ec7e2f1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hscript._Ast.ExprUnop_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hscript._Ast.ExprUnop_Impl_"); }

		inline static ::hx::ObjectPtr< ExprUnop_Impl__obj > __new() {
			::hx::ObjectPtr< ExprUnop_Impl__obj > __this = new ExprUnop_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ExprUnop_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			ExprUnop_Impl__obj *__this = (ExprUnop_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ExprUnop_Impl__obj), false, "hscript._Ast.ExprUnop_Impl_"));
			*(void **)__this = ExprUnop_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ExprUnop_Impl__obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ExprUnop_Impl_",8f,9d,ff,18); }

		static void __boot();
		static unsigned char NEG_BIT;
		static unsigned char NOT;
		static unsigned char NEG;
		static unsigned char INC;
		static unsigned char DEC;
		static  ::haxe::ds::IntMap EXPR_TO_LEXER_UNOP;
};

} // end namespace hscript
} // end namespace _Ast

#endif /* INCLUDED_hscript__Ast_ExprUnop_Impl_ */ 
