// Generated by Haxe 4.3.7
#ifndef INCLUDED_hscript__Lexer_LKeyword_Impl_
#define INCLUDED_hscript__Lexer_LKeyword_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(hscript,_Lexer,LKeyword_Impl_)

namespace hscript{
namespace _Lexer{


class HXCPP_CLASS_ATTRIBUTES LKeyword_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef LKeyword_Impl__obj OBJ_;
		LKeyword_Impl__obj();

	public:
		enum { _hx_ClassId = 0x1bc229f5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hscript._Lexer.LKeyword_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hscript._Lexer.LKeyword_Impl_"); }

		inline static ::hx::ObjectPtr< LKeyword_Impl__obj > __new() {
			::hx::ObjectPtr< LKeyword_Impl__obj > __this = new LKeyword_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< LKeyword_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			LKeyword_Impl__obj *__this = (LKeyword_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LKeyword_Impl__obj), false, "hscript._Lexer.LKeyword_Impl_"));
			*(void **)__this = LKeyword_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~LKeyword_Impl__obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("LKeyword_Impl_",5d,28,2d,f1); }

		static void __boot();
		static ::String AS;
		static ::String BREAK;
		static ::String CASE;
		static ::String CAST;
		static ::String CATCH;
		static ::String CONTINUE;
		static ::String DEFAULT;
		static ::String DO;
		static ::String ELSE;
		static ::String FALSE;
		static ::String FINAL;
		static ::String FOR;
		static ::String FUNCTION;
		static ::String IF;
		static ::String IMPORT;
		static ::String IN;
		static ::String INLINE;
		static ::String NEW;
		static ::String _hx_NULL;
		static ::String OVERRIDE;
		static ::String PRIVATE;
		static ::String PUBLIC;
		static ::String RETURN;
		static ::String STATIC;
		static ::String SWITCH;
		static ::String THIS;
		static ::String THROW;
		static ::String TRUE;
		static ::String TRY;
		static ::String VAR;
		static ::String WHILE;
		static ::Array< ::String > ALL_KEYWORDS;
		static  ::haxe::ds::StringMap ALL_KEYWORDS_LOOKUP;
};

} // end namespace hscript
} // end namespace _Lexer

#endif /* INCLUDED_hscript__Lexer_LKeyword_Impl_ */ 
